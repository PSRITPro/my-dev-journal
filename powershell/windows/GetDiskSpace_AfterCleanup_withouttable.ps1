# Set location path
Set-Location -Path $PSScriptRoot
# Define parameters
$smtpServer = "smtp.gmail.com"
$smtpPort = 587
$from = "pssreddy01@gmail.com"
$to = "psrsp01@sptrains.onmicrosoft.com"
# $inputFile = Import-csv "DiskCleanUp.csv"
# $daysAgo ="-1"
# Function to format disk space details into HTML
function Get-DiskSpaceHtml {
    param (
        [string]$sectionTitle,
        [string]$serverName,
        [string]$backupPath,
        [float]$beforeCleanup,
        [float]$afterCleanup,
        [float]$cleanupSize
    )
    $body = @"
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: Arial, sans-serif;
            color: #333;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: #ffffff;
            border: 1px solid #ddd;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        h1 {
            color: #d9534f;
            font-size: 28px;
            margin-bottom: 15px;
            border-bottom: 2px solid #d9534f;
            padding-bottom: 10px;
        }
        h2 {
            color: #5bc0de;
            font-size: 22px;
            margin-top: 0;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 5px;
        }
        p {
            font-size: 16px;
            line-height: 1.6;
            margin: 0 0 10px;
        }
        .section {
            margin-bottom: 20px;
            padding: 15px;
            background-color: #ffffff;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }
        .section:nth-child(even) {
            background-color: #f9f9f9;
        }
        .section p {
            margin: 0;
            padding: 10px 0;
        }
        .footer {
            font-size: 0.9em;
            color: #666;
            margin-top: 20px;
            border-top: 1px solid #ddd;
            padding-top: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>$sectionTitle</h1>
        <p>Server: <strong>$serverName</strong></p>
        <p>Backup Path: <strong>$backupPath</strong></p>
        
        <div class="section">
            <h2>Before Cleanup</h2>
            <p><strong>Size (in GB):</strong> $beforeCleanup</p>
        </div>
        
        <div class="section">
            <h2>After Cleanup</h2>
            <p><strong>Size (in GB):</strong> $afterCleanup</p>
        </div>
        
        <div class="section">
            <h2>Total Cleanup Size</h2>
            <p><strong>Size (in GB):</strong> $cleanupSize</p>
        </div>
        
        <div class="footer">
            <p>This report was generated by the disk space monitoring system.</p>
        </div>
    </div>
</body>
</html>
"@

    return $body
}

# Location of Backup Files
$BackupPath = "E:\GitHub\sptrains\PowerShell\Windows\FileStorage"
$textFilePath = "E:\GitHub\sptrains\PowerShell\Windows\Logs\BackupSizeReport.txt"

# Get total size of all files after cleanup
$afterCleanupTotalSize = (Get-ChildItem -Path $BackupPath -File | Measure-Object -Property Length -Sum).Sum
$afterCleanupTotalSize = [math]::round($afterCleanupTotalSize / 1GB, 2)
Write-Host "After Cleanup Size: $afterCleanupTotalSize GB"

# Read all content from the text file
$Content = Get-Content -Path $textFilePath

# Regular expression to match the total size value
$RegexPattern = "Total Backup Size: (\d+(\.\d+)?) GB"

# Initialize before cleanup size
$beforeCleanupTotalSize = 0

# Loop through each line of content and extract the size
ForEach($line in $Content) {
    If ($line -match $RegexPattern) {
        $beforeCleanupTotalSize = $matches[1]
        Write-Output "Total Backup Size Before Cleanup: $beforeCleanupTotalSize GB"
    }
}

# Calculate the cleanup size
$cleanupSize = $beforeCleanupTotalSize - $afterCleanupTotalSize

# Generate the HTML report
$diskInfoAfter = Get-DiskSpaceHtml -sectionTitle "Database Backup Storage Cleanup Report" `
    -serverName $($env:COMPUTERNAME) `
    -backupPath $BackupPath `
    -beforeCleanup $beforeCleanupTotalSize `
    -afterCleanup $afterCleanupTotalSize `
    -cleanupSize $cleanupSize

# Define email details
$subject = "Report: SQL Database Backup Files Cleanup" #on \\$($env:COMPUTERNAME)\$BackupPath"
# Read the password from a file
$txt = Get-Content "Pass.txt" # Replace with your Gmail password or App Password
$securePassword = ConvertTo-SecureString $txt -AsPlainText -Force
$credential = New-Object System.Management.Automation.PSCredential ($from, $securePassword)

# Send the email
Send-MailMessage -From $from -To $to -Subject $subject -Body $diskInfoAfter -BodyAsHtml -SmtpServer $smtpServer -Port $smtpPort -UseSsl -Credential $credential -Priority High
